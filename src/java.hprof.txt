JAVA PROFILE 1.0.1, created Fri Jun 28 15:03:30 2019

Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

  - Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.

  - Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.

  - Neither the name of Oracle nor the names of its
    contributors may be used to endorse or promote products derived
    from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


Header for -agentlib:hprof (or -Xrunhprof) ASCII Output (JDK 5.0 JVMTI based)

WARNING!  This file format is under development, and is subject to
change without notice.

This file contains the following types of records:

THREAD START
THREAD END      mark the lifetime of Java threads

TRACE           represents a Java stack trace.  Each trace consists
                of a series of stack frames.  Other records refer to
                TRACEs to identify (1) where object allocations have
                taken place, (2) the frames in which GC roots were
                found, and (3) frequently executed methods.

HEAP DUMP       is a complete snapshot of all live objects in the Java
                heap.  Following distinctions are made:

                ROOT    root set as determined by GC
                CLS     classes 
                OBJ     instances
                ARR     arrays

SITES           is a sorted list of allocation sites.  This identifies
                the most heavily allocated object types, and the TRACE
                at which those allocations occurred.

CPU SAMPLES     is a statistical profile of program execution.  The VM
                periodically samples all running threads, and assigns
                a quantum to active TRACEs in those threads.  Entries
                in this record are TRACEs ranked by the percentage of
                total quanta they consumed; top-ranked TRACEs are
                typically hot spots in the program.

CPU TIME        is a profile of program execution obtained by measuring
                the time spent in individual methods (excluding the time
                spent in callees), as well as by counting the number of
                times each method is called. Entries in this record are
                TRACEs ranked by the percentage of total CPU time. The
                "count" field indicates the number of times each TRACE 
                is invoked.

MONITOR TIME    is a profile of monitor contention obtained by measuring
                the time spent by a thread waiting to enter a monitor.
                Entries in this record are TRACEs ranked by the percentage
                of total monitor contention time and a brief description
                of the monitor.  The "count" field indicates the number of 
                times the monitor was contended at that TRACE.

MONITOR DUMP    is a complete snapshot of all the monitors and threads in 
                the System.

HEAP DUMP, SITES, CPU SAMPLES|TIME and MONITOR DUMP|TIME records are generated 
at program exit.  They can also be obtained during program execution by typing 
Ctrl-\ (on Solaris) or by typing Ctrl-Break (on Win32).

--------

THREAD START (obj=50000172, id = 200002, name="HPROF gc_finish watcher", group="system")
THREAD START (obj=50000180, id = 200001, name="main", group="main")
THREAD END (id = 200001)
THREAD START (obj=500001d7, id = 200003, name="DestroyJavaVM", group="main")
THREAD END (id = 200003)
TRACE 301288: (thread=200001)
	java.util.LinkedList.indexOf(LinkedList.java:Unknown line)
	java.util.LinkedList.contains(LinkedList.java:Unknown line)
	sun.misc.JarIndex.addToList(JarIndex.java:Unknown line)
	sun.misc.JarIndex.addMapping(JarIndex.java:Unknown line)
TRACE 301287: (thread=200001)
	java.lang.String.equals(String.java:Unknown line)
	java.util.LinkedList.indexOf(LinkedList.java:Unknown line)
	java.util.LinkedList.contains(LinkedList.java:Unknown line)
	sun.misc.JarIndex.addToList(JarIndex.java:Unknown line)
TRACE 301285: (thread=200001)
	sun.misc.JarIndex.addToList(JarIndex.java:Unknown line)
	sun.misc.JarIndex.addMapping(JarIndex.java:Unknown line)
	sun.misc.JarIndex.read(JarIndex.java:Unknown line)
	sun.misc.JarIndex.<init>(JarIndex.java:Unknown line)
TRACE 300266: (thread=200001)
	java.lang.ClassLoader.findBootstrapClassOrNull(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.loadClass(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.loadClass(ClassLoader.java:Unknown line)
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:Unknown line)
TRACE 300458: (thread=200001)
	java.lang.String.charAt(String.java:Unknown line)
	java.io.UnixFileSystem.normalize(UnixFileSystem.java:Unknown line)
	java.io.File.<init>(File.java:Unknown line)
	sun.misc.FileURLMapper.exists(FileURLMapper.java:Unknown line)
TRACE 300499: (thread=200001)
	java.io.File.exists(File.java:Unknown line)
	sun.misc.FileURLMapper.exists(FileURLMapper.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.getJarFile(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.access$800(URLClassPath.java:Unknown line)
TRACE 301294: (thread=200001)
	sun.misc.JarIndex.read(JarIndex.java:Unknown line)
	sun.misc.JarIndex.<init>(JarIndex.java:Unknown line)
	sun.misc.JarIndex.getJarIndex(JarIndex.java:Unknown line)
	sun.misc.URLClassPath$JarLoader$1.run(URLClassPath.java:Unknown line)
TRACE 300020: (thread=200001)
	java.lang.Thread.init(Thread.java:Unknown line)
	java.lang.Thread.init(Thread.java:Unknown line)
	java.lang.Thread.<init>(Thread.java:Unknown line)
TRACE 300039: (thread=200001)
	java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:Unknown line)
	java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:Unknown line)
	java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:Unknown line)
	java.lang.StringBuilder.append(StringBuilder.java:Unknown line)
TRACE 300092: (thread=200001)
	java.lang.ClassValue.<init>(ClassValue.java:Unknown line)
	java.lang.invoke.MethodHandleImpl$4.<init>(MethodHandleImpl.java:Unknown line)
	java.lang.invoke.MethodHandleImpl.<clinit>(MethodHandleImpl.java:Unknown line)
	java.lang.invoke.MethodHandle.<clinit>(MethodHandle.java:Unknown line)
TRACE 300118: (thread=200001)
	java.lang.System.getProperty(System.java:Unknown line)
	java.lang.Integer.getInteger(Integer.java:Unknown line)
	java.lang.Integer.getInteger(Integer.java:Unknown line)
	java.lang.invoke.MethodHandleStatics$1.run(MethodHandleStatics.java:Unknown line)
TRACE 300163: (thread=200001)
	java.lang.invoke.MethodHandle.<clinit>(MethodHandle.java:Unknown line)
TRACE 300212: (thread=200001)
	java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:Unknown line)
	java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:Unknown line)
	java.lang.ThreadLocal.get(ThreadLocal.java:Unknown line)
	java.lang.StringCoding.deref(StringCoding.java:Unknown line)
TRACE 300255: (thread=200001)
	java.lang.ClassLoader.findLoadedClass(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.loadClass(ClassLoader.java:Unknown line)
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:Unknown line)
	java.lang.ClassLoader.loadClass(ClassLoader.java:Unknown line)
TRACE 300326: (thread=200001)
	java.lang.String.startsWith(String.java:Unknown line)
	java.lang.String.endsWith(String.java:Unknown line)
	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
TRACE 300342: (thread=200001)
	sun.misc.SharedSecrets.getJavaUtilZipFileAccess(SharedSecrets.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.<clinit>(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
TRACE 300368: (thread=200001)
	java.lang.StringBuffer.<init>(StringBuffer.java:Unknown line)
	java.net.URLStreamHandler.toExternalForm(URLStreamHandler.java:Unknown line)
	java.net.URL.toExternalForm(URL.java:Unknown line)
	java.net.URL.toString(URL.java:Unknown line)
TRACE 300406: (thread=200001)
	java.lang.String.lastIndexOf(String.java:Unknown line)
	java.lang.String.lastIndexOf(String.java:Unknown line)
	java.net.Parts.<init>(URL.java:Unknown line)
	java.net.URL.<init>(URL.java:Unknown line)
TRACE 300423: (thread=200001)
	java.lang.String.charAt(String.java:Unknown line)
	java.io.UnixFileSystem.normalize(UnixFileSystem.java:Unknown line)
	java.io.File.<init>(File.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(URLClassPath.java:Unknown line)
TRACE 300459: (thread=200001)
	java.io.UnixFileSystem.normalize(UnixFileSystem.java:Unknown line)
	java.io.File.<init>(File.java:Unknown line)
	sun.misc.FileURLMapper.exists(FileURLMapper.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.getJarFile(URLClassPath.java:Unknown line)
TRACE 300462: (thread=200001)
	java.io.UnixFileSystem.prefixLength(UnixFileSystem.java:Unknown line)
	java.io.File.<init>(File.java:Unknown line)
	sun.misc.FileURLMapper.exists(FileURLMapper.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.getJarFile(URLClassPath.java:Unknown line)
TRACE 300478: (thread=200001)
	java.lang.StringCoding.access$000(StringCoding.java:Unknown line)
	java.lang.StringCoding$StringEncoder.encode(StringCoding.java:Unknown line)
	java.lang.StringCoding.encode(StringCoding.java:Unknown line)
	java.lang.String.getBytes(String.java:Unknown line)
TRACE 300498: (thread=200001)
	java.io.UnixFileSystem.getBooleanAttributes(UnixFileSystem.java:Unknown line)
	java.io.File.exists(File.java:Unknown line)
	sun.misc.FileURLMapper.exists(FileURLMapper.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.getJarFile(URLClassPath.java:Unknown line)
TRACE 300557: (thread=200001)
	sun.nio.cs.FastCharsetProvider.lookup(FastCharsetProvider.java:Unknown line)
	sun.nio.cs.FastCharsetProvider.charsetForName(FastCharsetProvider.java:Unknown line)
	java.nio.charset.Charset.lookup2(Charset.java:Unknown line)
	java.nio.charset.Charset.lookup(Charset.java:Unknown line)
TRACE 300579: (thread=200001)
	java.lang.Class.forName(Class.java:Unknown line)
	sun.nio.cs.FastCharsetProvider.lookup(FastCharsetProvider.java:Unknown line)
	sun.nio.cs.FastCharsetProvider.charsetForName(FastCharsetProvider.java:Unknown line)
	java.nio.charset.Charset.lookup2(Charset.java:Unknown line)
TRACE 300593: (thread=200001)
	java.lang.reflect.Executable.<init>(Executable.java:Unknown line)
	java.lang.reflect.Constructor.<init>(Constructor.java:Unknown line)
	java.lang.reflect.Constructor.copy(Constructor.java:Unknown line)
	java.lang.reflect.ReflectAccess.copyConstructor(ReflectAccess.java:Unknown line)
TRACE 300765: (thread=200001)
	java.nio.DirectByteBuffer.asLongBuffer(DirectByteBuffer.java:Unknown line)
	sun.misc.PerfCounter.<init>(PerfCounter.java:Unknown line)
	sun.misc.PerfCounter.newPerfCounter(PerfCounter.java:Unknown line)
	sun.misc.PerfCounter$CoreCounters.<clinit>(PerfCounter.java:Unknown line)
TRACE 300766: (thread=200001)
	sun.misc.PerfCounter.<init>(PerfCounter.java:Unknown line)
	sun.misc.PerfCounter.newPerfCounter(PerfCounter.java:Unknown line)
	sun.misc.PerfCounter$CoreCounters.<clinit>(PerfCounter.java:Unknown line)
	sun.misc.PerfCounter.getZipFileOpenTime(PerfCounter.java:Unknown line)
TRACE 300787: (thread=200001)
	java.util.zip.ZipFile.<init>(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.<init>(ZipFile.java:Unknown line)
	java.util.jar.JarFile.<init>(JarFile.java:Unknown line)
	java.util.jar.JarFile.<init>(JarFile.java:Unknown line)
TRACE 300788: (thread=200001)
	java.util.zip.ZipFile.<init>(ZipFile.java:Unknown line)
	java.util.jar.JarFile.<init>(JarFile.java:Unknown line)
	java.util.jar.JarFile.<init>(JarFile.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.getJarFile(URLClassPath.java:Unknown line)
TRACE 300831: (thread=200001)
	java.util.zip.ZipCoder.getBytes(ZipCoder.java:Unknown line)
	java.util.zip.ZipFile.getEntry(ZipFile.java:Unknown line)
	java.util.jar.JarFile.getEntry(JarFile.java:Unknown line)
	java.util.jar.JarFile.getJarEntry(JarFile.java:Unknown line)
TRACE 300839: (thread=200001)
	sun.misc.JarIndex.getJarIndex(JarIndex.java:Unknown line)
	sun.misc.URLClassPath$JarLoader$1.run(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$JarLoader$1.run(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.ensureOpen(URLClassPath.java:Unknown line)
TRACE 300846: (thread=200001)
	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath.getLoader(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath.getLoader(URLClassPath.java:Unknown line)
TRACE 300848: (thread=200001)
	sun.misc.URLClassPath.getLoader(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath.getLoader(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath.getNextLoader(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath.getResource(URLClassPath.java:Unknown line)
TRACE 300906: (thread=200001)
	java.util.zip.ZipFile.getZipEntry(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.getEntry(ZipFile.java:Unknown line)
	java.util.jar.JarFile.getEntry(JarFile.java:Unknown line)
	java.util.jar.JarFile.getJarEntry(JarFile.java:Unknown line)
TRACE 300936: (thread=200001)
	java.util.zip.ZipFile$ZipFileInputStream.<init>(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.getInputStream(ZipFile.java:Unknown line)
	java.util.jar.JarFile.getBytes(JarFile.java:Unknown line)
	java.util.jar.JarFile.checkForSpecialAttributes(JarFile.java:Unknown line)
TRACE 300942: (thread=200001)
	java.lang.Class.desiredAssertionStatus(Class.java:Unknown line)
	java.util.zip.Inflater.<clinit>(Inflater.java:Unknown line)
	java.util.zip.ZipFile.getInflater(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.getInputStream(ZipFile.java:Unknown line)
TRACE 300991: (thread=200001)
	java.util.zip.Inflater.inflate(Inflater.java:Unknown line)
	java.util.zip.InflaterInputStream.read(InflaterInputStream.java:Unknown line)
	sun.misc.IOUtils.readFully(IOUtils.java:Unknown line)
	java.util.jar.JarFile.getBytes(JarFile.java:Unknown line)
TRACE 301006: (thread=200001)
	java.util.WeakHashMap.maskNull(WeakHashMap.java:Unknown line)
	java.util.WeakHashMap.remove(WeakHashMap.java:Unknown line)
	java.util.zip.ZipFile$ZipFileInputStream.close(ZipFile.java:Unknown line)
	java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:Unknown line)
TRACE 301017: (thread=200001)
	java.util.zip.InflaterInputStream.read(InflaterInputStream.java:Unknown line)
	sun.misc.IOUtils.readFully(IOUtils.java:Unknown line)
	java.util.jar.JarFile.getBytes(JarFile.java:Unknown line)
	java.util.jar.JarFile.checkForSpecialAttributes(JarFile.java:Unknown line)
TRACE 301060: (thread=200001)
	java.util.ArrayList.ensureCapacityInternal(ArrayList.java:Unknown line)
	java.util.ArrayList.add(ArrayList.java:Unknown line)
	sun.misc.URLClassPath.getLoader(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath.getNextLoader(URLClassPath.java:Unknown line)
TRACE 301079: (thread=200001)
	sun.misc.URLClassPath$JarLoader.getResource(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath.getResource(URLClassPath.java:Unknown line)
	java.net.URLClassLoader$1.run(URLClassLoader.java:Unknown line)
	java.net.URLClassLoader$1.run(URLClassLoader.java:Unknown line)
TRACE 301088: (thread=200001)
	java.lang.Character.toUpperCaseEx(Character.java:Unknown line)
	java.lang.String.toUpperCase(String.java:Unknown line)
	java.util.jar.JarFile.maybeInstantiateVerifier(JarFile.java:Unknown line)
	java.util.jar.JarFile.getInputStream(JarFile.java:Unknown line)
TRACE 301162: (thread=200001)
	java.io.InputStreamReader.<init>(InputStreamReader.java:Unknown line)
	sun.misc.JarIndex.read(JarIndex.java:Unknown line)
	sun.misc.JarIndex.<init>(JarIndex.java:Unknown line)
	sun.misc.JarIndex.getJarIndex(JarIndex.java:Unknown line)
TRACE 301210: (thread=200001)
	sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Decoder.decodeLoop(UTF_8.java:Unknown line)
	java.nio.charset.CharsetDecoder.decode(CharsetDecoder.java:Unknown line)
TRACE 301253: (thread=200001)
	java.io.InputStreamReader.read(InputStreamReader.java:Unknown line)
	java.io.BufferedReader.fill(BufferedReader.java:Unknown line)
	java.io.BufferedReader.readLine(BufferedReader.java:Unknown line)
	java.io.BufferedReader.readLine(BufferedReader.java:Unknown line)
TRACE 301260: (thread=200001)
	java.lang.String.startsWith(String.java:Unknown line)
	java.lang.String.endsWith(String.java:Unknown line)
	sun.misc.JarIndex.read(JarIndex.java:Unknown line)
	sun.misc.JarIndex.<init>(JarIndex.java:Unknown line)
TRACE 301262: (thread=200001)
	java.lang.String.length(String.java:Unknown line)
	sun.misc.JarIndex.read(JarIndex.java:Unknown line)
	sun.misc.JarIndex.<init>(JarIndex.java:Unknown line)
	sun.misc.JarIndex.getJarIndex(JarIndex.java:Unknown line)
TRACE 301265: (thread=200001)
	java.lang.String.hashCode(String.java:Unknown line)
	java.util.HashMap.hash(HashMap.java:Unknown line)
	java.util.HashMap.get(HashMap.java:Unknown line)
	sun.misc.JarIndex.addToList(JarIndex.java:Unknown line)
TRACE 301267: (thread=200001)
	java.util.HashMap.getNode(HashMap.java:Unknown line)
	java.util.HashMap.get(HashMap.java:Unknown line)
	sun.misc.JarIndex.addToList(JarIndex.java:Unknown line)
	sun.misc.JarIndex.addMapping(JarIndex.java:Unknown line)
TRACE 301271: (thread=200001)
	java.util.AbstractList.<init>(AbstractList.java:Unknown line)
	java.util.AbstractSequentialList.<init>(AbstractSequentialList.java:Unknown line)
	java.util.LinkedList.<init>(LinkedList.java:Unknown line)
	sun.misc.JarIndex.addToList(JarIndex.java:Unknown line)
TRACE 301273: (thread=200001)
	java.util.LinkedList.<init>(LinkedList.java:Unknown line)
	sun.misc.JarIndex.addToList(JarIndex.java:Unknown line)
	sun.misc.JarIndex.addMapping(JarIndex.java:Unknown line)
	sun.misc.JarIndex.read(JarIndex.java:Unknown line)
TRACE 301279: (thread=200001)
	java.util.HashMap.hash(HashMap.java:Unknown line)
	java.util.HashMap.put(HashMap.java:Unknown line)
	sun.misc.JarIndex.addToList(JarIndex.java:Unknown line)
	sun.misc.JarIndex.addMapping(JarIndex.java:Unknown line)
TRACE 301284: (thread=200001)
	java.util.HashMap.put(HashMap.java:Unknown line)
	sun.misc.JarIndex.addToList(JarIndex.java:Unknown line)
	sun.misc.JarIndex.addMapping(JarIndex.java:Unknown line)
	sun.misc.JarIndex.read(JarIndex.java:Unknown line)
TRACE 301286: (thread=200001)
	sun.misc.JarIndex.addMapping(JarIndex.java:Unknown line)
	sun.misc.JarIndex.read(JarIndex.java:Unknown line)
	sun.misc.JarIndex.<init>(JarIndex.java:Unknown line)
	sun.misc.JarIndex.getJarIndex(JarIndex.java:Unknown line)
TRACE 301289: (thread=200001)
	java.util.LinkedList.contains(LinkedList.java:Unknown line)
	sun.misc.JarIndex.addToList(JarIndex.java:Unknown line)
	sun.misc.JarIndex.addMapping(JarIndex.java:Unknown line)
	sun.misc.JarIndex.read(JarIndex.java:Unknown line)
TRACE 301315: (thread=200001)
	java.net.URL.getUserInfo(URL.java:Unknown line)
	java.net.URLStreamHandler.parseURL(URLStreamHandler.java:Unknown line)
	sun.net.www.protocol.file.Handler.parseURL(Handler.java:Unknown line)
	java.net.URL.<init>(URL.java:Unknown line)
TRACE 301616: (thread=200001)
	java.lang.String.hashCode(String.java:Unknown line)
	java.util.HashMap.hash(HashMap.java:Unknown line)
	java.util.HashMap.put(HashMap.java:Unknown line)
	java.lang.ClassLoader.definePackage(ClassLoader.java:Unknown line)
TRACE 301734: (thread=200001)
	java.io.File.<init>(File.java:Unknown line)
	sun.net.www.protocol.file.Handler.openConnection(Handler.java:Unknown line)
	sun.net.www.protocol.file.Handler.openConnection(Handler.java:Unknown line)
	java.net.URL.openConnection(URL.java:Unknown line)
TRACE 301759: (thread=200001)
	java.lang.String.indexOf(String.java:Unknown line)
	sun.net.www.ParseUtil.decode(ParseUtil.java:Unknown line)
	sun.net.www.protocol.file.FileURLConnection.getPermission(FileURLConnection.java:Unknown line)
	java.net.URLClassLoader.getPermissions(URLClassLoader.java:Unknown line)
TRACE 301842: (thread=200001)
	java.io.FilePermission.newPermissionCollection(FilePermission.java:Unknown line)
	java.security.Permissions.getPermissionCollection(Permissions.java:Unknown line)
	java.security.Permissions.add(Permissions.java:Unknown line)
	java.net.URLClassLoader.getPermissions(URLClassLoader.java:Unknown line)
TRACE 301930: (thread=200001)
	java.util.concurrent.ConcurrentHashMap.casTabAt(ConcurrentHashMap.java:Unknown line)
	java.util.concurrent.ConcurrentHashMap.putVal(ConcurrentHashMap.java:Unknown line)
	java.util.concurrent.ConcurrentHashMap.putIfAbsent(ConcurrentHashMap.java:Unknown line)
	java.lang.ClassLoader.checkCerts(ClassLoader.java:Unknown line)
TRACE 302151: (thread=200001)
	com.test.Main.staticHello(Main.java:Unknown line)
	com.test.Main.main(Main.java:Unknown line)
TRACE 302230: (thread=200001)
	sun.reflect.ReflectionFactory.newMethodAccessor(ReflectionFactory.java:Unknown line)
	java.lang.reflect.Method.acquireMethodAccessor(Method.java:Unknown line)
	java.lang.reflect.Method.invoke(Method.java:Unknown line)
	com.test.OtherClass.refelctOnMe(OtherClass.java:Unknown line)
CPU TIME (ms) BEGIN (total = 100) Fri Jun 28 15:03:30 2019
rank   self  accum   count trace method
   1 20.00% 20.00%     188 301288 java.util.LinkedList.indexOf
   2 11.00% 31.00%   17766 301287 java.lang.String.equals
   3  4.00% 35.00%     378 301285 sun.misc.JarIndex.addToList
   4  2.00% 37.00%      14 300266 java.lang.ClassLoader.findBootstrapClassOrNull
   5  2.00% 39.00%     639 300458 java.lang.String.charAt
   6  2.00% 41.00%      11 300499 java.io.File.exists
   7  2.00% 43.00%       1 301294 sun.misc.JarIndex.read
   8  1.00% 44.00%       5 300020 java.lang.Thread.init
   9  1.00% 45.00%      68 300039 java.lang.AbstractStringBuilder.newCapacity
  10  1.00% 46.00%       1 300092 java.lang.ClassValue.<init>
  11  1.00% 47.00%       4 300118 java.lang.System.getProperty
  12  1.00% 48.00%       1 300163 java.lang.invoke.MethodHandle.<clinit>
  13  1.00% 49.00%      44 300212 java.lang.ThreadLocal$ThreadLocalMap.getEntry
  14  1.00% 50.00%      14 300255 java.lang.ClassLoader.findLoadedClass
  15  1.00% 51.00%      12 300326 java.lang.String.startsWith
  16  1.00% 52.00%       1 300342 sun.misc.SharedSecrets.getJavaUtilZipFileAccess
  17  1.00% 53.00%      13 300368 java.lang.StringBuffer.<init>
  18  1.00% 54.00%      11 300406 java.lang.String.lastIndexOf
  19  1.00% 55.00%     639 300423 java.lang.String.charAt
  20  1.00% 56.00%      11 300459 java.io.UnixFileSystem.normalize
  21  1.00% 57.00%      11 300462 java.io.UnixFileSystem.prefixLength
  22  1.00% 58.00%      41 300478 java.lang.StringCoding.access$000
  23  1.00% 59.00%      11 300498 java.io.UnixFileSystem.getBooleanAttributes
  24  1.00% 60.00%       7 300557 sun.nio.cs.FastCharsetProvider.lookup
  25  1.00% 61.00%       4 300579 java.lang.Class.forName
  26  1.00% 62.00%       4 300593 java.lang.reflect.Executable.<init>
  27  1.00% 63.00%       6 300765 java.nio.DirectByteBuffer.asLongBuffer
  28  1.00% 64.00%       6 300766 sun.misc.PerfCounter.<init>
  29  1.00% 65.00%      11 300787 java.util.zip.ZipFile.<init>
  30  1.00% 66.00%      11 300788 java.util.zip.ZipFile.<init>
  31  1.00% 67.00%      39 300831 java.util.zip.ZipCoder.getBytes
  32  1.00% 68.00%      11 300839 sun.misc.JarIndex.getJarIndex
  33  1.00% 69.00%      12 300846 sun.misc.URLClassPath$3.run
  34  1.00% 70.00%      12 300848 sun.misc.URLClassPath.getLoader
  35  1.00% 71.00%       7 300906 java.util.zip.ZipFile.getZipEntry
  36  1.00% 72.00%       6 300936 java.util.zip.ZipFile$ZipFileInputStream.<init>
  37  1.00% 73.00%       1 300942 java.lang.Class.desiredAssertionStatus
  38  1.00% 74.00%      12 300991 java.util.zip.Inflater.inflate
  39  1.00% 75.00%       7 301006 java.util.WeakHashMap.maskNull
  40  1.00% 76.00%       6 301017 java.util.zip.InflaterInputStream.read
  41  1.00% 77.00%      12 301060 java.util.ArrayList.ensureCapacityInternal
  42  1.00% 78.00%      22 301079 sun.misc.URLClassPath$JarLoader.getResource
  43  1.00% 79.00%      48 301088 java.lang.Character.toUpperCaseEx
  44  1.00% 80.00%       1 301162 java.io.InputStreamReader.<init>
  45  1.00% 81.00%       3 301210 sun.nio.cs.UTF_8$Decoder.xflow
  46  1.00% 82.00%       2 301253 java.io.InputStreamReader.read
  47  1.00% 83.00%     193 301260 java.lang.String.startsWith
  48  1.00% 84.00%     191 301262 java.lang.String.length
  49  1.00% 85.00%     378 301265 java.lang.String.hashCode
  50  1.00% 86.00%     378 301267 java.util.HashMap.getNode
  51  1.00% 87.00%     190 301271 java.util.AbstractList.<init>
  52  1.00% 88.00%     190 301273 java.util.LinkedList.<init>
  53  1.00% 89.00%     190 301279 java.util.HashMap.hash
  54  1.00% 90.00%     190 301284 java.util.HashMap.put
  55  1.00% 91.00%     189 301286 sun.misc.JarIndex.addMapping
  56  1.00% 92.00%     188 301289 java.util.LinkedList.contains
  57  1.00% 93.00%       5 301315 java.net.URL.getUserInfo
  58  1.00% 94.00%       1 301616 java.lang.String.hashCode
  59  1.00% 95.00%       1 301734 java.io.File.<init>
  60  1.00% 96.00%       1 301759 java.lang.String.indexOf
  61  1.00% 97.00%       1 301842 java.io.FilePermission.newPermissionCollection
  62  1.00% 98.00%       1 301930 java.util.concurrent.ConcurrentHashMap.casTabAt
  63  1.00% 99.00%       1 302151 com.test.Main.staticHello
  64  1.00% 100.00%       1 302230 sun.reflect.ReflectionFactory.newMethodAccessor
CPU TIME (ms) END
